name: CI

on: [push]

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macOS-10.14]
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '8.0.212'
    - name: Setup Env
      run: ./scripts/setup.sh ${{ matrix.os }}
    - name: Build Jar
      run: ./scripts/compile-maven.sh
    - name: Compile Binary
      run: ./scripts/build.sh ${{ matrix.os }}
    - name: Upload ${{ matrix.os }} Binary
      uses: actions/upload-artifact@master
      with:
        name: *
        path: releases/0.3.0
  release:
    name: Release Build
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - uses: actions/download-artifact@master
        with:
          name: *
          path: releases/0.3.0
      - run: ls ${PWD}/releases/0.3.0
 #     - name: Release
 #       uses: softprops/action-gh-release@v1
 #       if: startsWith(github.ref, 'refs/tags/')
 #       with:
 #         files: |
 #           ${PWD}/releases/0.3.0/titan-cli-0.3.0-linux_amd64.zip
 #           ${PWD}/releases/0.3.0/titan-cli-0.3.0-darwin_amd64.zip
 #       env:
 #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#  build-windows:
#    name: build windows
#    runs-on: windows-2019
#    steps:
#    - uses: actions/checkout@v1
#    - name: Install Graal VM
#      run: | 
#        choco install graalvm --version 19.1.0 maven --version 3.6.1
#        SET JAVA_HOME=C:\Program Files\GraalVM\graalvm-ce-19.1.0\jre
#        SET GRAAL_BIN=C:\Program Files\GraalVM\graalvm-ce-19.1.0\bin
#        SET PATH=%GRAAL_BIN%;%PATH%
#    - name: Install Native Image
#      run: gu install native-image
#    - name: Build Jar
#      run: mvn clean package
      
